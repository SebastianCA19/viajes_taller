spring:
  application:
    name: api-gateway

  data:
    redis:
      host: redis
      port: 6379

  cloud:
    gateway:
      routes:
        - id: itinerarios
          uri: http://itinerario:8081   # ðŸ”¥ AquÃ­ el cambio
          predicates:
            - Path=/api/itinerarios/**
          filters:
            - RewritePath=/api/itinerarios(?<segment>/?.*), /api/itinerary/v1/${segment}
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@ipKeyResolver}"
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 5
            - name: CircuitBreaker
              args:
                name: itinerarioCircuitBreaker
                fallbackUri: forward:/fallback/itinerario
            - name: CacheResponse
              args:
                prefix: "itinerarios:"
            - AddRequestHeader=X-Service-Source, Itinerarios-Gateway
            - AddResponseHeader=X-Response-Processed-By, API-Gateway

        - id: reservas
          uri: http://reservas:8082     # ðŸ”¥ AquÃ­ tambiÃ©n
          predicates:
            - Path=/api/reservas/**
          filters:
            - RewritePath=/api/reservas(?<segment>/?.*), /api/v1/bookings${segment}
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@ipKeyResolver}"
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 5
            - name: CircuitBreaker
              args:
                name: reservaCircuitBreaker
                fallbackUri: forward:/fallback/reservas
            - name: CacheResponse
              args:
                prefix: "reservas:"
            - AddRequestHeader=X-Service-Source, Reservas-Gateway
            - AddResponseHeader=X-Response-Processed-By, API-Gateway
