server:
  port: 8080

spring:
  application:
    name: api-gateway

  data:
    redis:
      host: localhost
      port: 6379

  cloud:
    gateway:
      server:
        webflux:
          enabled: true
          routes:
            - id: itinerarios
              uri: http://localhost:8081
              predicates:
                - Path=/api/itinerarios/**
              filters:
                - RewritePath=/api/v1/itineraries/(?<segment>.*), /${segment}
                - name: RequestRateLimiter
                  args:
                    redis-rate-limiter.replenishRate: 5
                    redis-rate-limiter.burstCapacity: 5
                - name: CircuitBreaker
                  args:
                    name: itinerarioCircuitBreaker
                    fallbackUri: forward:/fallback/itinerario
                - name: CacheResponse
                  args:
                    prefix: "itinerarios:"
                - AddRequestHeader=X-Service-Source, Itinerarios-Gateway
                - AddResponseHeader=X-Response-Processed-By, API-Gateway


            - id: reservas
              uri: http://localhost:8082
              predicates:
                - Path=/api/reservas/**
              filters:
                - RewritePath=/api/v1/bookings/(?<segment>.*), /${segment}
                - name: RequestRateLimiter
                  args:
                    redis-rate-limiter.replenishRate: 5
                    redis-rate-limiter.burstCapacity: 5
                - name: CircuitBreaker
                  args:
                    name: reservaCircuitBreaker
                    fallbackUri: forward:/fallback/reserva
                - name: CacheResponse
                  args:
                    prefix: "reservas:"
                - AddRequestHeader=X-Service-Source, Reservas-Gateway
                - AddResponseHeader=X-Response-Processed-By, API-Gateway

management:
  endpoints:
    web:
      exposure:
        include: health,info,circuitbreakerevents
  endpoint:
    health:
      show-details: always


resilience4j:
  circuitbreaker:
    instances:
      itinerarioCircuitBreaker:
        sliding-window-size: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s
      reservaCircuitBreaker:
        sliding-window-size: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s
